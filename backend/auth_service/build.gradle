plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.6'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.satvik'
version = '0.0.1-SNAPSHOT'
description = 'Authentication and user management service for Expense Tracker'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// üóÉÔ∏è ORM & Database Support (JPA + Hibernate)
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// üîê Spring Security (Authentication, Authorization, Password Encoding)
	implementation 'org.springframework.boot:spring-boot-starter-security'

	// üåê Spring Web (REST APIs, Controllers, JSON support)
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// üí¨ Kafka Integration (for producing & consuming messages)
	implementation 'org.springframework.kafka:spring-kafka'

	// ‚ö° Lombok (to reduce boilerplate: getters, setters, constructors, etc.)
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// üê¨ MySQL Database Driver (connect Spring Data JPA to MySQL)
	runtimeOnly 'com.mysql:mysql-connector-j'

	// üß™ Testing Frameworks
	testImplementation 'org.springframework.boot:spring-boot-starter-test'      // Spring Boot testing support (JUnit, Mockito)
	testImplementation 'org.springframework.kafka:spring-kafka-test'            // Kafka test utilities
	testImplementation 'org.springframework.security:spring-security-test'      // Security test helpers
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'                // JUnit platform runtime

	// üîë JWT (JSON Web Token) support using JJWT library
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'      // main JWT API
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'        // runtime implementation
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'     // integrates JWT with Jackson for JSON parsing

	implementation 'org.springframework.boot:spring-boot-starter-validation'

}


tasks.named('test') {
	useJUnitPlatform()
}
